##**Data Exploration******************************************************************##

#*Price difference by neighbourhood
library(stringr)
library(car)
library(faraway)
library(ggplot2)
library(corrgram)
library(leaps)
library(gridExtra)
library(corrplot)
library(MASS)
library(plyr) 
library(dplyr)

#*Showing total number of neighbourhood group cleansed
pal <- colorRampPalette(colors = c("black","Green"))(12)
ggplot(df3, aes(x=neighbourhood_group_cleansed)) + geom_bar(col=pal) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))

#*Histogram of price
ggplot(data = df3, 
       aes(df3$price)) + 
  geom_histogram(bins = 50, 
                 col = "#000000", 
                 fill = "#99FFFF", 
                 alpha = .5) + 
  labs(x = "Price", y = "Frequency") + 
  scale_x_continuous(breaks = c(seq(0, 800, 200),1000, 1500, 2000)) +
  scale_y_continuous(breaks = c(seq(0, 4000, 1000), 4600)) +
  theme_minimal() + 
  theme(axis.text.x = element_text(size = 10), 
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 11),
        axis.title.y = element_text(size = 11))

##We get a left skewed graph. To rectify that we take the log value of variable price

ggplot(data = df3, 
       aes(log(df3$price))) + 
  geom_histogram(bins = 50, 
                 col = "#000000", 
                 fill = "#99FFFF", 
                 alpha = .5) + 
  labs(x = "Price", y = "Frequency") + 
  theme_minimal() + 
  theme(axis.text.x = element_text(size = 10), 
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 11),
        axis.title.y = element_text(size = 11))

##Price according to the mapping coordinates(darker the colour higher the price)

plot(df3$longitude,df3$latitude,col=df3$price,xlab="longitude",ylab="latitude")


##Side-by-side boxplots without using 0-500 price, for each neighbourhood.
ggplot(df3, 
       aes(x = as.numeric(df3$neighbourhood_group_cleansed), 
           y = df3$price, 
           fill = df3$neighbourhood_group_cleansed)) + 
  geom_boxplot(alpha = .6, outlier.alpha = .4) +
  scale_y_continuous(name = "Price",limits = c(0, 500)) + 
  scale_x_discrete(name = "Neighbourhoods") + 
  theme_minimal() +
  theme(axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12),
        axis.text.y = element_text(size = 10),
        legend.position = "bottom") + 
  theme(legend.text = element_text(size = 8)) + 
  labs(fill = "")


#*CTD for price 0-500
ggplot(df3, aes(x=CTD, y=price)) + geom_point() +scale_y_continuous(limits = c(0, 500))


#*Boxplots of price 0-500, for each room type.
ggplot(df3, 
       aes(x = as.numeric(df3$room_type), 
           y = df3$price,  
           fill = df3$room_type)) + 
  geom_boxplot(alpha = 0.6, outlier.alpha = 0.4) + 
  scale_y_continuous(name = "Price",limits = c(0, 500)) + 
  scale_x_discrete(name = "Room Type") +
  theme_minimal() +
  theme(axis.text.y = element_text(size = 10), 
        axis.title.x = element_text(size = 11),
        axis.title.y = element_text(size = 11),
        legend.text = element_text(size = 9),
        legend.position = "bottom") +
  scale_fill_brewer(palette = "Set1") +
  labs(fill = "")

#*Scatterplot of price and cleaning fee(0-500).
p5 = ggplot(df3, 
            aes(x = df3$cleaning_fee, 
                y = df3$price)) + 
  geom_point(color='darkblue') + scale_y_continuous(name = "Price",limits = c(0, 500))+
  scale_x_continuous(name = "Cleaning Fee",limits = c(0, 500))+
  theme_minimal() +
  labs(x = 'Cleaning Fee', y = 'Log of Price') +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 5),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 2))
p5
